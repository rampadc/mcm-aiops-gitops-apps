apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-managed-argocd
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-managed-argocd-namespace
        spec:
          remediationAction: enforce
          severity: low
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Namespace
                metadata:
                  name: openshift-gitops
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: openshift-gitops-installed
        spec:
          remediationAction: enforce
          severity: med
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                # This is an auto-generated file. DO NOT EDIT
                apiVersion: operators.coreos.com/v1alpha1
                kind: Subscription
                metadata:
                  name: openshift-gitops-operator
                  namespace: openshift-operators
                  labels:
                    operators.coreos.com/openshift-gitops-operator.openshift-operators: ''
                spec:
                  channel: stable
                  installPlanApproval: Automatic
                  name: openshift-gitops-operator
                  source: redhat-operators
                  sourceNamespace: openshift-marketplace
                  config:
                    env:
                    - name: DISABLE_DEFAULT_ARGOCD_INSTANCE
                      value: 'TRUE'
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: openshift-gitops-custom-argocd-cr
        spec:
          remediationAction: enforce
          severity: med
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                # This is an auto-generated file. DO NOT EDIT
                kind: ClusterRole
                apiVersion: rbac.authorization.k8s.io/v1
                metadata:
                  name: custom-argocd-cluster-argocd-application-controller
                rules:
                  - verbs:
                      - '*'
                    apiGroups:
                      - ''
                    resources:
                      - pods
                      - services
                      - services/finalizers
                      - endpoints
                      - events
                      - configmaps
                      - secrets
                      - serviceaccounts
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'triggers.tekton.dev'
                    resources:
                      - eventlisteners
                      - triggerbindings
                      - triggertemplates
                  - verbs:
                      - '*'
                    apiGroups:
                      - apps
                    resources:
                      - daemonsets
                      - deployments
                      - replicasets
                      - statefulsets
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'route.openshift.io'
                    resources:
                      - routes
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'security.openshift.io'
                    resources:
                      - securitycontextconstraints
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'operator.cert-manager.io'
                    resources:
                      - certmanagers
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'cert-manager.io'
                    resources:
                      - clusterissuers
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'bitnami.com'
                    resources:
                      - sealedsecretcontrollers
                      - sealedsecrets
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'integreatly.org'
                    resources:
                      - grafanas
                      - grafanadatasources
                      - grafanadashboards
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'networking.k8s.io'
                    resources:
                      - networkpolicies
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'integration.ibm.com'
                    resources:
                      - platformnavigators
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'operators.coreos.com'
                    resources:
                      - subscriptions
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'tekton.dev'
                    resources:
                      - pipelines
                      - tasks
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'maistra.io'
                    resources:
                      - servicemeshcontrolplanes
                      - servicemeshmembers
                      - servicemeshmemberrolls
                  - verbs:
                      - '*'
                    apiGroups:
                      - 'networking.istio.io'
                    resources:
                      - virtualservices
                      - gateways
                      - destinationrules
                  - verbs:
                      - create
                      - list
                    apiGroups:
                      - ''
                    resources:
                      - events
                  - verbs:
                      - '*'
                    apiGroups:
                      - batch
                    resources:
                      - cronjobs
                      - jobs
                  - verbs:
                      - '*'
                    apiGroups:
                      - argoproj.io
                    resources:
                      - applications
                      - appprojects
                  - verbs:
                      - get
                      - list
                      - watch
                    apiGroups:
                      - '*'
                    resources:
                      - '*'
                  - verbs:
                      - get
                      - list
                    nonResourceURLs:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      - operators.coreos.com
                    resources:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      - operator.openshift.io
                    resources:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      - user.openshift.io
                    resources:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      - config.openshift.io
                    resources:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      - console.openshift.io
                    resources:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      - ''
                    resources:
                      - namespaces
                      - persistentvolumeclaims
                      - persistentvolumes
                      - configmaps
                  - verbs:
                      - '*'
                    apiGroups:
                      - rbac.authorization.k8s.io
                    resources:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      - storage.k8s.io
                    resources:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      - appconnect.ibm.com
                    resources:
                      - integrationservers
                      - dashboards
                      - configurations
                  - verbs:
                      - '*'
                    apiGroups:
                      - machineconfiguration.openshift.io
                    resources:
                      - machineconfigpools
                      - containerruntimeconfigs
                  - verbs:
                      - '*'
                    apiGroups:
                      - tuned.openshift.io
                    resources:
                      - tuneds
                  - verbs:
                      - '*'
                    apiGroups:
                      - apiextensions.k8s.io
                    resources:
                      - customresourcedefinitions
                  - verbs:
                      - '*'
                    apiGroups:
                      - processmining.ibm.com
                    resources:
                      - processminings
                  - verbs:
                      - '*'
                    apiGroups:
                      - ocs.openshift.io
                    resources:
                      - storageclusters
                  - verbs:
                      - '*'
                    apiGroups:
                      - imageregistry.operator.openshift.io
                    resources:
                      - configs
                  - verbs:
                      - '*'
                    apiGroups:
                      - operator.ibm.com
                    resources:
                      - commonservices
                  - verbs:
                      - '*'
                    apiGroups:
                      - mq.ibm.com
                    resources:
                      - queuemanagers
                  - verbs:
                      - '*'
                    apiGroups:
                      - icp4a.ibm.com
                    resources:
                      - icp4aclusters
                  - verbs:
                      - '*'
                    apiGroups:
                      - orchestrator.management.ibm.com
                    resources:
                      - installations
                  - verbs:
                      - '*'
                    apiGroups:
                      - operator.open-cluster-management.io
                    resources:
                      - multiclusterhubs
                  - verbs:
                      - '*'
                    apiGroups:
                      - internal.open-cluster-management.io
                    resources:
                      - managedclusterinfos
                  - verbs:
                      - '*'
                    apiGroups:
                      - cluster.open-cluster-management.io
                    resources:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      - project.openshift.io
                    resources:
                      - projects
                  - verbs:
                      - '*'
                    apiGroups:
                      - agent.open-cluster-management.io
                    resources:
                      - klusterletaddonconfigs
                  - verbs:
                      - '*'
                    apiGroups:
                      - admissionregistration.k8s.io
                    resources:
                      - validatingwebhookconfigurations
                      - mutatingwebhookconfigurations
                  - verbs:
                      - '*' 
                    apiGroups:
                      - cluster.open-cluster-management.io
                    resources:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      clusterview.open-cluster-management.io
                    resources:
                      - '*'
                  - verbs:
                      - '*'
                    apiGroups:
                      - charts.helm.k8s.io
                    resources:
                      - xls
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: openshift-gitops-custom-argocd-crb-1
        spec:
          remediationAction: enforce
          severity: med
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                # This is an auto-generated file. DO NOT EDIT
                kind: ClusterRoleBinding
                apiVersion: rbac.authorization.k8s.io/v1
                metadata:
                  name: openshift-gitops-argocd-application-controller
                subjects:
                  - kind: ServiceAccount
                    name: openshift-gitops-argocd-application-controller
                    namespace: openshift-gitops
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: custom-argocd-cluster-argocd-application-controller
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: openshift-gitops-custom-argocd-crb-2
        spec:
          remediationAction: enforce
          severity: med
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                # This is an auto-generated file. DO NOT EDIT
                kind: ClusterRoleBinding
                apiVersion: rbac.authorization.k8s.io/v1
                metadata:
                  name: openshift-gitops-cntk-argocd-application-controller
                subjects:
                  - kind: ServiceAccount
                    name: openshift-gitops-cntk-argocd-application-controller
                    namespace: openshift-gitops
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: custom-argocd-cluster-argocd-application-controller
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: openshift-gitops-custom-argocd-crb-3
        spec:
          remediationAction: enforce
          severity: med
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                # This is an auto-generated file. DO NOT EDIT
                kind: ClusterRoleBinding
                apiVersion: rbac.authorization.k8s.io/v1
                metadata:
                  name: openshift-gitops-cntk-argocd-application-controller-acm
                subjects:
                  - kind: ServiceAccount
                    name: openshift-gitops-cntk-argocd-application-controller
                    namespace: openshift-gitops
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: open-cluster-management:cluster-manager-admin
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: openshift-gitops-argocd-instance
        spec:
          remediationAction: enforce
          severity: med
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - openshift-gitops
          object-templates:
            - complianceType: musthave
              objectDefinition:
                # This is an auto-generated file. DO NOT EDIT
                apiVersion: argoproj.io/v1alpha1
                kind: ArgoCD
                metadata:
                  name: openshift-gitops-cntk
                spec:
                  server:
                    autoscale:
                      enabled: false
                    grpc:
                      ingress:
                        enabled: false
                    ingress:
                      enabled: false
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 125m
                        memory: 128Mi
                    route:
                      enabled: true
                    service:
                      type: ''
                  grafana:
                    enabled: false
                    ingress:
                      enabled: false
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 250m
                        memory: 128Mi
                    route:
                      enabled: false
                  prometheus:
                    enabled: false
                    ingress:
                      enabled: false
                    route:
                      enabled: false
                  initialSSHKnownHosts: {}
                  resourceCustomizations: |
                    argoproj.io/Application:
                      ignoreDifferences: |
                        jsonPointers:
                        - /spec/source/targetRevision
                        - /spec/source/repoURL
                    argoproj.io/AppProject:
                      ignoreDifferences: |
                        jsonPointers:
                        - /spec/sourceRepos
                    operators.coreos.com/OperatorGroup:
                      ignoreDifferences: |
                        jsonPointers:
                        - /metadata/annotations/olm.providedAPIs
                    operators.coreos.com/InstallPlan:
                      health.lua: |
                        hs = {}
                        if obj.status ~= nil then
                          if obj.status.phase ~= nil then
                            hs.message = obj.status.phase
                            if obj.status.phase == "Complete" then
                              hs.status = "Healthy"
                            else
                              hs.status = "Progressing"
                            end
                            return hs
                          end
                        end
                        hs.status = "Progressing"
                        hs.message = "Unknown"
                        return hs
                    operators.coreos.com/Subscription:
                      health.lua: |
                        hs = {}
                        if obj.status ~= nil then
                          if obj.status.installedCSV ~= nil then
                            hs.status = "Healthy"
                            hs.message = "CSV Installed"
                            if obj.status.state ~= nil then
                              hs.message = obj.status.state
                            end
                            return hs
                          end
                        end
                        hs.status = "Progressing"
                        hs.message = "Unknown"
                        if obj.status.state ~= nil then
                          hs.message = obj.status.state
                        end
                        return hs
                    operator.ibm.com/CommonService:
                      health.lua: |
                        hs = {}
                        if obj.status ~= nil then
                          if obj.status.phase ~= nil then
                            hs.message = obj.status.phase
                            if obj.status.phase == "Succeeded" then
                              hs.status = "Healthy"
                            else
                              hs.status = "Progressing"
                            end
                            return hs
                          end
                        end
                        hs.status = "Progressing"
                        hs.message = "Unknown"
                        return hs
                    mq.ibm.com/QueueManager:
                      health.lua: |
                        hs = {}
                        if obj.status ~= nil then
                          if obj.status.phase ~= nil then
                            hs.message = obj.status.phase
                            if obj.status.phase == "Running" then
                              hs.status = "Healthy"
                            else
                              hs.status = "Progressing"
                            end
                            return hs
                          end
                        end
                        hs.status = "Progressing"
                        hs.message = "Unknown"
                        return hs                  
                  applicationSet:
                    resources:
                      limits:
                        cpu: '2'
                        memory: 1Gi
                      requests:
                        cpu: 250m
                        memory: 512Mi
                  rbac: {}
                  repo:
                    resources:
                      limits:
                        cpu: '1'
                        memory: 512Mi
                      requests:
                        cpu: 250m
                        memory: 256Mi
                  resourceExclusions: |
                    - apiGroups:
                      - tekton.dev
                      clusters:
                      - '*'
                      kinds:
                      - TaskRun
                      - PipelineRun
                  dex:
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 250m
                        memory: 128Mi
                  ha:
                    enabled: false
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 250m
                        memory: 128Mi
                  tls:
                    ca: {}
                  redis:
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 250m
                        memory: 128Mi
                  controller:
                    processors: {}
                    resources:
                      limits:
                        cpu: '2'
                        memory: 4Gi
                      requests:
                        cpu: 250m
                        memory: 1Gi
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-managed-argocd
placementRef:
  name: placement-policy-managed-argocd
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: policy-managed-argocd
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-managed-argocd
spec:
  clusterConditions:
    - status: "True"
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - { key: argocd, operator: In, values: ["true"] }